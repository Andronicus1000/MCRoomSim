function [room_rev, room_dry, receivers, sources, original_hrir_fs] = load_scene_specifications(razr_rir_path, fs)
% Read the RIR file simulated by RAZR package, to replicate the same scene
% specifications in MCRoomSim environment.
%   razr_rir_path: The absolute path to the RAZR RIR file
%   fs: the sampling rate to which we'll resample the HRIR

    %% Load RAZR rir
    razr_rir = load(razr_rir_path);

    %% Room
    % RAZR room walls are in the order of -z, -y, -x, +x, +y, +z
    % MCRoomSim walls should be in order of x0, x1, y0, y1, z0, z1
    absorption_coefficient = [...
        razr_rir.room_abscoeff(3, :);...
        razr_rir.room_abscoeff(4, :);...
        razr_rir.room_abscoeff(2, :);...
        razr_rir.room_abscoeff(5, :);...
        razr_rir.room_abscoeff(1, :);...
        razr_rir.room_abscoeff(6, :);...
    ];

    room_rev = SetupRoom(...
        'Dim', razr_rir.room_dimension,...
        'Temp', razr_rir.room_temperature,...
        'Freq', razr_rir.room_freq,...
        'Absorption', absorption_coefficient...
    );

    room_dry = SetupRoom(...
        'Dim', razr_rir.room_dimension,...
        'Temp', razr_rir.room_temperature,...
        'Freq', razr_rir.room_freq,...
        'Absorption', repmat(razr_rir.dry_room_abscoeff, 6, 1)...
    );

    %% Receivers
    % Load the HRTF file
    path_split = strsplit(razr_rir_path, filesep);
    hrtf_dataset = path_split{6};
    subset = path_split{8};
    hrtf_filestem = strjoin({hrtf_dataset, subset, razr_rir.hrtf_formfactor}, '_');
    head = load_sonova_hrtf(hrtf_filestem);
    
    original_hrir_fs = double(head.fs);
    response = double(head.hrtf_data);
    if fs ~= original_hrir_fs
        response = permute(resample(permute(response, [2 1 3]), fs, original_hrir_fs), [2 1 3]);
    end
    
    % Receiver orientation is in values [yaw, pitch, roll].
    % For RAZR we only added azimuth and elevation, meaning roll = 0.
    receivers = AddReceiver(...
        'Type', 'impulse',...
        'Orientation', [razr_rir.orientation(1), razr_rir.orientation(2), 0],...
        'Location', razr_rir.position,...
        'Response', response,...
        'Direction', head.angles,...
        'Fs', fs...
    );

    %% Sources
    num_sources = length(razr_rir.src_positions);
    sources = [];
    for i = 1:num_sources
        sources = AddSource(sources, 'Location', razr_rir.src_positions(i, :), 'Fs', fs);
    end
end
